<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="henu.javaweb.collapstime.mapper.SingerMapper">
    <insert id="followSinger" parameterType="henu.javaweb.collapstime.model.Collect">
        insert into collect (user_id,singer_id,type) values (#{userId},#{singerId},2);
    </insert>
    <delete id="dismissFollowSinger" parameterType="henu.javaweb.collapstime.model.Collect">
        delete from collect where user_id = #{userId} and singer_id = #{singerId};
    </delete>
    <delete id="deleteCollectSinger">
        delete from collect where type = 2 and user_id = #{userId} and singer_id = #{singerId};
    </delete>
    <select id="getSingerNameById" resultType="java.lang.String">
        select name from singer where id = #{id};
    </select>
    <select id="getSingerById" resultType="henu.javaweb.collapstime.model.Singer">
        select * from singer where id = #{singerId};
    </select>
    <select id="getSongBySingerId" resultType="henu.javaweb.collapstime.model.Song">
        select * from song where singer_id = #{singerId};
    </select>
    <select id="getSingerOfUserCollect" resultType="java.lang.Integer">
        select singer_id from collect where type = 2 and user_id = #{userId};
    </select>
    <select id="getCollectSingerCount" resultType="java.lang.Integer">
        select count(distinct user_id) from collect where singer_id = #{singId} and type = 2;
    </select>
    <select id="querySingerTop20OfId" resultType="java.lang.Integer">
        select singer_id from collect where type = 2 group by singer_id order by  count(distinct user_id) limit 20;
    </select>
    <select id="querySingerTop20" resultType="henu.javaweb.collapstime.model.Singer">
        select * from singer
        where singer.id in
        <foreach collection="singerIds" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        <if test="singerIds!= null and singerIds.size>0">
            order by field( singer.id,
            <foreach collection="singerIds" index="index" item="item" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>
    <select id="fromSongIdToSingerId" resultType="java.lang.Integer">
        select singer_id from song where id = #{songId};
    </select>
    <select id="getUserCollectSinger" resultType="henu.javaweb.collapstime.model.Singer">
        select * from singer where id in(
            select singer_id from collect where type = 2 and user_id = #{userId}
        );
    </select>
    <select id="getSingerCountOfFemale" resultType="java.lang.Integer">
        select count(id) from  singer where sex = 0;
    </select>
    <select id="getSingerCountOfMale" resultType="java.lang.Integer">
        select count(id) from  singer where sex = 1;
    </select>
    <select id="getBandCount" resultType="java.lang.Integer">
        select count(id) from singer where sex = 2;
    </select>

</mapper>